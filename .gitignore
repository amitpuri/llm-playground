# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments - CRITICAL: Never commit environment files with real credentials
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# CRITICAL SECURITY: Environment files with real credentials
# These patterns catch all possible environment file variations
**/.env
**/.env.local
**/.env.development
**/.env.production
**/.env.staging
**/.env.test
**/.env.*
**/env.txt
**/environment.txt
**/config.env
**/settings.env

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the following files:
#  .idea/
#  *.iml
#  *.ipr
#  *.iws
.idea/
*.iml
*.ipr
*.iws

# VS Code
.vscode/
*.code-workspace

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.tmp
*.temp
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# Project specific - LLM Playground
# Add any project-specific files or directories here
config.ini
secrets.json
*.key
*.pem
*.p12
*.pfx

# CRITICAL SECURITY: API Keys and Authentication Files
# These patterns catch all possible credential file variations
**/api_keys.txt
**/api_keys.json
**/credentials.json
**/credentials.txt
**/token.json
**/token.txt
**/auth.json
**/auth.txt
**/config.json
**/secrets.json
**/secrets.txt
**/*.key
**/*.pem
**/*.p12
**/*.pfx
**/private_key*
**/public_key*
**/certificate*
**/cert*

# CRITICAL SECURITY: Atlassian Directory Protection
# Never commit any files from the atlassian directory that might contain credentials
atlassian/.env
atlassian/*.env
atlassian/config/
atlassian/credentials/
atlassian/secrets/
atlassian/data/
atlassian/logs/
atlassian/cache/
atlassian/temp/
atlassian/exports/
atlassian/backups/

# LLM Playground specific - Updated for centralized session-data structure
# Main playground settings (keep the template, ignore session-specific files)
playgrounds/session-data/settings-*.json
playgrounds/session-data/settings.json.bak
playgrounds/session-data/settings.json.tmp

# CRITICAL: Never commit the main settings.json file with real API keys
# This file should only contain empty placeholders for API keys
# If you need to commit a template, use sample.settings.json instead
playgrounds/session-data/settings.json

# Centralized session data and logs (NEW STRUCTURE)
# Keep documentation files but ignore actual session data
# Only allow markdown files in logs directory - ignore everything else
playgrounds/session-data/logs/*.log
playgrounds/session-data/logs/session_*.log
playgrounds/session-data/logs/debug_*.log
playgrounds/session-data/logs/mcp-calls.log
playgrounds/session-data/logs/error-logs.log
playgrounds/session-data/logs/performance.log

# Session data subdirectories
playgrounds/session-data/user-sessions/
playgrounds/session-data/cache/
playgrounds/session-data/temp/
playgrounds/session-data/config/

# Legacy playground paths (for backward compatibility)
playgrounds/*/session-data/
playgrounds/*/logs/
playgrounds/*/temp/
playgrounds/*/cache/
playgrounds/*/outputs/
playgrounds/*/uploads/

# Extended playground specific (legacy paths)
playgrounds/extended/logs/
playgrounds/extended/session-data/
playgrounds/extended/temp/
playgrounds/extended/cache/
playgrounds/extended/outputs/

# Basic playground specific (legacy paths)
playgrounds/basic/logs/
playgrounds/basic/session-data/
playgrounds/basic/temp/
playgrounds/basic/cache/
playgrounds/basic/outputs/

# Legacy playground paths (for backward compatibility)
playground/settings.json
playground/.env
playground/instance/
playground/static/uploads/
playground/temp/
playground/cache/
playground/outputs/
playground/demo-script

# Database files
*.db
*.sqlite
*.sqlite3
database/data/
database/backups/
database/exports/

# GitHub issues exports
github-issues/*.json
github-issues/exports/
github-issues/data/

# PostgreSQL MCP specific
pg/data/
pg/logs/
pg/exports/

# Generated files and exports
exports/
data/
backups/
*.csv
*.xlsx
*.json.bak

# Logs (general)
*.log
# Ignore general logs directories but allow specific ones with exceptions
logs/
!playgrounds/session-data/logs/
!playgrounds/session-data/logs/*.md

# Temporary files
temp/
tmp/

# Ollama models and data (if running locally)
ollama_data/
ollama_models/

# MCP server data
mcp_data/
mcp_cache/
mcp_logs/

# Node.js (if any frontend tools are used)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
package-lock.json
yarn.lock

# Docker
.dockerignore
docker-compose.override.yml
docker-compose.override.yaml

# Local development
.local/
local/
dev/
development/

# CRITICAL SECURITY: Additional Protection Patterns
# Catch any files that might contain sensitive information
**/private/
**/secret/
**/confidential/
**/sensitive/
**/internal/
**/production/
**/staging/
**/dev/
**/test/

# Backup and temporary files that might contain credentials
**/*.bak
**/*.backup
**/*.tmp
**/*.temp
**/*.old
**/*.orig
**/*.save

# IDE and editor files that might contain sensitive data
**/.vscode/settings.json
**/.idea/workspace.xml
**/.idea/tasks.xml
**/.idea/usage.statistics.xml
**/.idea/dictionaries/
**/.idea/shelf/

# OS generated files
**/.DS_Store
**/Thumbs.db
**/ehthumbs.db
**/Desktop.ini

# CRITICAL: Never commit any files with these patterns in their content
# This is a reminder - actual filtering should be done by pre-commit hooks
# Files containing API keys, tokens, passwords, etc.


